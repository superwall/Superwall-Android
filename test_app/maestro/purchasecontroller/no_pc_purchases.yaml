appId: com.superwall.superapp
name: no_pc_test
---
- runFlow:
    file: "../login.yaml"
    optional: true
# Launch app and navigate to Purchase Controller Test
- launchApp: com.superwall.superapp
- tapOn: "Purchase Controller Test"

# Configure with Purchase Controller and trigger paywall
- tapOn: "Configure without PC"
# We mark this as optional as sometimes it triggers but doesnt register as visible
- extendedWaitUntil: # This is just to add a 2 second delay so focus is properly taken
    visible: randText
    optional: true
    timeout: 2000

- runFlow:
    when:
      visible: 'Subscription Status is Active'
    commands:
      - tapOn: 'Set Status Inactive'

- tapOn: 
    text: "Trigger Paywall"
    waitToSettleTimeoutMs: 1000
    optional: true
- waitForAnimationToEnd:
    timeout: 1000
- extendedWaitUntil: # This is just to add a 2 second delay so focus is properly taken
     visible: '.*Continue.*'
     optional: true
     timeout: 2000

- tapOn: "Continue"

# Handle terms agreement if visible
- runFlow:
    when:
      visible: "Agree"
    commands:
      - tapOn: "Agree"

- waitForAnimationToEnd:
    timeout: 1000
# If approve card is pre-selected, switch to decline card
- runFlow:
    when:
      visible: "Test card, always approves"
    commands:
      - tapOn: "Test card, always approves"
      - tapOn: "Test card, always declines"
- runFlow:
    when:
      platform: Android
    commands:
      - tapOn: "Subscribe"
      - assertVisible: "Declined by always denied test instrument"
      - tapOn: "Got it"
      - assertVisible: "An error occurred"
      - assertVisible: "3"
      - tapOn: "Done"
      - tapOn: "Continue"
      - tapOn: "Test card, always declines"
      - tapOn: "Test card, always approves"
      - tapOn:
          text: "Subscribe"
          waitToSettleTimeoutMs: 1000
      - waitForAnimationToEnd:
          timeout: 1000
      - tapOn:
          text: "No, thanks"
          optional: true
          waitToSettleTimeoutMs: 1000
      - tapOn:
          text: "OK"
          optional: true
          waitToSettleTimeoutMs: 1000
      - waitForAnimationToEnd:
          timeout: 1000
      - tapOn:
          text: "Not now"
          optional: true
          waitToSettleTimeoutMs: 1000
      - assertVisible: "Subscribed"
      - assertVisible: "Feature triggered"
      - tapOn: "OK"

# Test on iOS
- runFlow:
    when:
      platform: iOS
    commands:
      - tapOn: 
          text: "Continue"
          optional: true
      - tapOn: 
          text: "Subscribe"
          optional: true
      - tapOn: 
          text: "OK"
          optional: true
      - assertVisible: "Feature triggered"
      - tapOn: "OK"
      - tapOn: "Reset status"

